{"version":3,"sources":["static/camera_para.dat","components/ViewerArToolkit.js","App.js","reportWebVitals.js","index.js"],"names":["onError","error","console","onload","arController","loadNFTMarker","then","markerId","trackNFTMarker","catch","err","log","addEventListener","ev","markerResult","type","matrix","JSON","stringify","data","registerController","a","ARController","initWithDimensions","cameraData","ViewerArToolkit","useEffect","App","vh","document","documentElement","clientHeight","window","innerHeight","style","setProperty","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+MAAe,MAA0B,wC,OCKnCA,EAAU,SAACC,GACfC,QAAQD,MAAM,wCAAyCA,IAGnDE,EAAS,SAACC,GACdA,EACGC,cAAc,2CACdC,MAAK,SAACC,GACLH,EAAaI,eAAeD,MAE7BE,OAAM,SAACC,GACNR,QAAQS,IAAI,oCAAqCD,MAGrDN,EAAaQ,iBAAiB,gBAAgB,SAACC,GAC7C,IAAMC,EAAe,CACnBC,KAAM,QACNC,OAAQC,KAAKC,UAAUL,EAAGM,KAAKH,SAEjCd,QAAQS,IAAI,cAAeG,OAIzBM,EAAkB,uCAAG,sBAAAC,EAAA,sDACzBC,eAAaC,mBAAmB,IAAK,IAAKC,GACvClB,KAAKH,GACLM,MAAMT,GAHgB,2CAAH,qDAoBTyB,EARS,WAKtB,OAJAC,qBAAU,WACRN,OAGK,yCCnBMO,EAxBH,WACV,IAAIC,EAIsB,KAHtBC,UACAA,SAASC,iBACTD,SAASC,gBAAgBC,cACzBC,OAAOC,aAYX,OAXAJ,SAASC,gBAAgBI,MAAMC,YAAY,OAA3C,UAAsDP,EAAtD,OAEAI,OAAOpB,iBAAiB,UAAU,WAChCgB,EAI0B,KAHtBC,UACAA,SAASC,iBACTD,SAASC,gBAAgBC,cACzBC,OAAOC,aACXJ,SAASC,gBAAgBI,MAAMC,YAAY,OAA3C,UAAsDP,EAAtD,UAIA,qBAAKQ,UAAU,MAAf,SACE,cAAC,EAAD,OCTSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BX,M","file":"static/js/main.df542896.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/camera_para.fb94e301.dat\";","import { useEffect } from 'react';\nimport { ARController } from 'artoolkit5-js';\nimport cameraData from '../static/camera_para.dat';\n// import detectNFTMarker from '../utils/markerTracker';\n\nconst onError = (error) => {\n  console.error('Error while intizalizing arController', error);\n};\n\nconst onload = (arController) => {\n  arController\n    .loadNFTMarker('ar-test/static/markers/digitalls_marker')\n    .then((markerId) => {\n      arController.trackNFTMarker(markerId);\n    })\n    .catch((err) => {\n      console.log('Error in loading marker on Worker', err);\n    });\n\n  arController.addEventListener('getNFTMarker', (ev) => {\n    const markerResult = {\n      type: 'found',\n      matrix: JSON.stringify(ev.data.matrix),\n    };\n    console.log('markerFound', markerResult);\n  });\n};\n\nconst registerController = async () => {\n  ARController.initWithDimensions(640, 480, cameraData)\n    .then(onload)\n    .catch(onError);\n\n  // const digitallsMarkerId = await controller.artoolkit.addNFTMarker(\n  //   controller.id,\n  //   'ar-test/static/markers/digitalls_marker'\n  // );\n  // detectNFTMarker(controller, digitallsMarkerId);\n};\n\nconst ViewerArToolkit = () => {\n  useEffect(() => {\n    registerController();\n  });\n\n  return <div>Hello</div>;\n};\n\nexport default ViewerArToolkit;\n","import ViewerArToolkit from './components/ViewerArToolkit';\n\nconst App = () => {\n  let vh =\n    ((document &&\n      document.documentElement &&\n      document.documentElement.clientHeight) ||\n      window.innerHeight) * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n\n  window.addEventListener('resize', () => {\n    vh =\n      ((document &&\n        document.documentElement &&\n        document.documentElement.clientHeight) ||\n        window.innerHeight) * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  });\n\n  return (\n    <div className=\"App\">\n      <ViewerArToolkit />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}